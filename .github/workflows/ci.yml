name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    env:
      BUNDLE_WITHOUT: torch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    env:
      BUNDLE_WITHOUT: torch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest

    env:
      BUNDLE_WITHOUT: torch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: 'npm'

      - name: Install JS dependencies
        run: npm ci

      - name: Lint JS code (ESLint)
        run: npx eslint app/javascript/**/*.js

      - name: Check formatting (Prettier)
        run: npx prettier . --check

      - name: erb_lint
        run: bundle exec erb_lint --lint-all

  test:
    runs-on: ubuntu-latest

    env:
      LIBTORCH_VERSION: "2.8.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache LibTorch
        id: cache-libtorch
        uses: actions/cache@v4
        with:
          path: libtorch
          key: libtorch-${{ runner.os }}-x86_64-${{ env.LIBTORCH_VERSION }}-cpu-shared

      - name: Download LibTorch (if not cached)
        if: steps.cache-libtorch.outputs.cache-hit != 'true'
        run: |
          url="https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-${LIBTORCH_VERSION}%2Bcpu.zip"
          curl -L "$url" -o libtorch.zip
          unzip -q libtorch.zip
          rm libtorch.zip

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: false

      - name: Cache vendor/bundle
        id: cache-bundle
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: bundle-${{ runner.os }}-ruby-3.4.4-${{ hashFiles('**/Gemfile.lock') }}-libtorch-${{ env.LIBTORCH_VERSION }}

      - name: Bundle install
        run: |
          bundle config build.torch-rb --with-torch-dir=${{ github.workspace }}/libtorch
          bundle config set path 'vendor/bundle'
          bundle install

      - name: Set up Database
        run: bin/rails db:prepare

      - name: Run tests
        run: bin/rails test test/*
